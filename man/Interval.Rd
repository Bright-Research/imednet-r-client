% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interval.R
\docType{class}
\name{Interval}
\alias{Interval}
\title{Interval}
\format{
An \code{R6Class} generator object
}
\description{
Interval Class

Interval Class
}
\details{
Create a new Interval
}
\examples{

## ------------------------------------------------
## Method `Interval$toList`
## ------------------------------------------------

# convert array of Interval (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{studyKey}}{Unique study key character [optional]}

\item{\code{intervalId}}{Unique system identifier for the interval (visit definition) integer [optional]}

\item{\code{intervalName}}{Name of the interval (visit) as defined in the study character [optional]}

\item{\code{intervalDescription}}{Description of the interval (visit) character [optional]}

\item{\code{intervalSequence}}{Sequence number of the interval in the schedule integer [optional]}

\item{\code{intervalGroupId}}{Identifier for the interval group (if intervals are grouped) integer [optional]}

\item{\code{intervalGroupName}}{Name of the interval group character [optional]}

\item{\code{timeline}}{Type of interval visit window (e.g., None, Due Date, Start - End Date, Actual Date) character [optional]}

\item{\code{definedUsingInterval}}{Baseline interval used for calculating this interval’s dates character [optional]}

\item{\code{windowCalculationForm}}{Baseline form (name) from which the calculation date is taken character [optional]}

\item{\code{windowCalculationDate}}{Baseline field (variable name) from which the calculation date is taken character [optional]}

\item{\code{actualDateForm}}{Form used to capture the actual date for this interval character [optional]}

\item{\code{actualDate}}{Field (variable name) used to capture the actual date for this interval character [optional]}

\item{\code{dueDateWillBeIn}}{Number of days from the calculation date when the interval is due integer [optional]}

\item{\code{negativeSlack}}{Number of days before the due date that are allowed (negative window) integer [optional]}

\item{\code{positiveSlack}}{Number of days after the due date that are allowed (positive window) integer [optional]}

\item{\code{eproGracePeriod}}{Number of days of grace period for ePRO completion after due date integer [optional]}

\item{\code{forms}}{List of forms that are scheduled in this interval list(\link{ComponentsSchemasIntervalFormsItem}) [optional]}

\item{\code{disabled}}{Whether the interval is soft-deleted (disabled) character [optional]}

\item{\code{dateCreated}}{Date when this interval was created character [optional]}

\item{\code{dateModified}}{Date when this interval was last modified character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Interval-new}{\code{Interval$new()}}
\item \href{#method-Interval-toJSON}{\code{Interval$toJSON()}}
\item \href{#method-Interval-toList}{\code{Interval$toList()}}
\item \href{#method-Interval-toSimpleType}{\code{Interval$toSimpleType()}}
\item \href{#method-Interval-fromJSON}{\code{Interval$fromJSON()}}
\item \href{#method-Interval-toJSONString}{\code{Interval$toJSONString()}}
\item \href{#method-Interval-fromJSONString}{\code{Interval$fromJSONString()}}
\item \href{#method-Interval-validateJSON}{\code{Interval$validateJSON()}}
\item \href{#method-Interval-toString}{\code{Interval$toString()}}
\item \href{#method-Interval-isValid}{\code{Interval$isValid()}}
\item \href{#method-Interval-getInvalidFields}{\code{Interval$getInvalidFields()}}
\item \href{#method-Interval-print}{\code{Interval$print()}}
\item \href{#method-Interval-clone}{\code{Interval$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-new"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Interval class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$new(
  studyKey = NULL,
  intervalId = NULL,
  intervalName = NULL,
  intervalDescription = NULL,
  intervalSequence = NULL,
  intervalGroupId = NULL,
  intervalGroupName = NULL,
  timeline = NULL,
  definedUsingInterval = NULL,
  windowCalculationForm = NULL,
  windowCalculationDate = NULL,
  actualDateForm = NULL,
  actualDate = NULL,
  dueDateWillBeIn = NULL,
  negativeSlack = NULL,
  positiveSlack = NULL,
  eproGracePeriod = NULL,
  forms = NULL,
  disabled = NULL,
  dateCreated = NULL,
  dateModified = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{studyKey}}{Unique study key}

\item{\code{intervalId}}{Unique system identifier for the interval (visit definition)}

\item{\code{intervalName}}{Name of the interval (visit) as defined in the study}

\item{\code{intervalDescription}}{Description of the interval (visit)}

\item{\code{intervalSequence}}{Sequence number of the interval in the schedule}

\item{\code{intervalGroupId}}{Identifier for the interval group (if intervals are grouped)}

\item{\code{intervalGroupName}}{Name of the interval group}

\item{\code{timeline}}{Type of interval visit window (e.g., None, Due Date, Start - End Date, Actual Date)}

\item{\code{definedUsingInterval}}{Baseline interval used for calculating this interval’s dates}

\item{\code{windowCalculationForm}}{Baseline form (name) from which the calculation date is taken}

\item{\code{windowCalculationDate}}{Baseline field (variable name) from which the calculation date is taken}

\item{\code{actualDateForm}}{Form used to capture the actual date for this interval}

\item{\code{actualDate}}{Field (variable name) used to capture the actual date for this interval}

\item{\code{dueDateWillBeIn}}{Number of days from the calculation date when the interval is due}

\item{\code{negativeSlack}}{Number of days before the due date that are allowed (negative window)}

\item{\code{positiveSlack}}{Number of days after the due date that are allowed (positive window)}

\item{\code{eproGracePeriod}}{Number of days of grace period for ePRO completion after due date}

\item{\code{forms}}{List of forms that are scheduled in this interval}

\item{\code{disabled}}{Whether the interval is soft-deleted (disabled)}

\item{\code{dateCreated}}{Date when this interval was created}

\item{\code{dateModified}}{Date when this interval was last modified}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-toList"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Interval as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of Interval (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert Interval to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Interval
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Interval
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Interval in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Interval
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Interval
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Interval and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Interval
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-print"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Interval-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Interval-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Interval$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
