% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metadata.R
\docType{class}
\name{Metadata}
\alias{Metadata}
\title{Metadata}
\format{
An \code{R6Class} generator object
}
\description{
Metadata Class

Metadata Class
}
\details{
Create a new Metadata
}
\examples{

## ------------------------------------------------
## Method `Metadata$toList`
## ------------------------------------------------

# convert array of Metadata (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{status}}{HTTP status of the response (e.g., OK or ERROR) character [optional]}

\item{\code{method}}{HTTP method of the request character [optional]}

\item{\code{path}}{Requested URI path character [optional]}

\item{\code{timestamp}}{Timestamp when response was generated character [optional]}

\item{\code{error}}{\link{ComponentsSchemasMetadataError} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Metadata-new}{\code{Metadata$new()}}
\item \href{#method-Metadata-toJSON}{\code{Metadata$toJSON()}}
\item \href{#method-Metadata-toList}{\code{Metadata$toList()}}
\item \href{#method-Metadata-toSimpleType}{\code{Metadata$toSimpleType()}}
\item \href{#method-Metadata-fromJSON}{\code{Metadata$fromJSON()}}
\item \href{#method-Metadata-toJSONString}{\code{Metadata$toJSONString()}}
\item \href{#method-Metadata-fromJSONString}{\code{Metadata$fromJSONString()}}
\item \href{#method-Metadata-validateJSON}{\code{Metadata$validateJSON()}}
\item \href{#method-Metadata-toString}{\code{Metadata$toString()}}
\item \href{#method-Metadata-isValid}{\code{Metadata$isValid()}}
\item \href{#method-Metadata-getInvalidFields}{\code{Metadata$getInvalidFields()}}
\item \href{#method-Metadata-print}{\code{Metadata$print()}}
\item \href{#method-Metadata-clone}{\code{Metadata$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-new"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Metadata class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$new(
  status = NULL,
  method = NULL,
  path = NULL,
  timestamp = NULL,
  error = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{status}}{HTTP status of the response (e.g., OK or ERROR)}

\item{\code{method}}{HTTP method of the request}

\item{\code{path}}{Requested URI path}

\item{\code{timestamp}}{Timestamp when response was generated}

\item{\code{error}}{error}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-toList"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Metadata as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of Metadata (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert Metadata to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Metadata
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Metadata
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Metadata in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Metadata
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Metadata
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Metadata and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Metadata
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-print"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Metadata-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Metadata-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Metadata$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
