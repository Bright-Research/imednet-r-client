% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/site.R
\docType{class}
\name{Site}
\alias{Site}
\title{Site}
\format{
An \code{R6Class} generator object
}
\description{
Site Class

Site Class
}
\details{
Create a new Site
}
\examples{

## ------------------------------------------------
## Method `Site$toList`
## ------------------------------------------------

# convert array of Site (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{studyKey}}{Unique study key character [optional]}

\item{\code{siteId}}{Unique site ID integer [optional]}

\item{\code{siteName}}{Name of the site character [optional]}

\item{\code{siteEnrollmentStatus}}{Enrollment status of the site character [optional]}

\item{\code{dateCreated}}{Date when this site was created character [optional]}

\item{\code{dateModified}}{Date when this site was last modified character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Site-new}{\code{Site$new()}}
\item \href{#method-Site-toJSON}{\code{Site$toJSON()}}
\item \href{#method-Site-toList}{\code{Site$toList()}}
\item \href{#method-Site-toSimpleType}{\code{Site$toSimpleType()}}
\item \href{#method-Site-fromJSON}{\code{Site$fromJSON()}}
\item \href{#method-Site-toJSONString}{\code{Site$toJSONString()}}
\item \href{#method-Site-fromJSONString}{\code{Site$fromJSONString()}}
\item \href{#method-Site-validateJSON}{\code{Site$validateJSON()}}
\item \href{#method-Site-toString}{\code{Site$toString()}}
\item \href{#method-Site-isValid}{\code{Site$isValid()}}
\item \href{#method-Site-getInvalidFields}{\code{Site$getInvalidFields()}}
\item \href{#method-Site-print}{\code{Site$print()}}
\item \href{#method-Site-clone}{\code{Site$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-new"></a>}}
\if{latex}{\out{\hypertarget{method-Site-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Site class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$new(
  studyKey = NULL,
  siteId = NULL,
  siteName = NULL,
  siteEnrollmentStatus = NULL,
  dateCreated = NULL,
  dateModified = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{studyKey}}{Unique study key}

\item{\code{siteId}}{Unique site ID}

\item{\code{siteName}}{Name of the site}

\item{\code{siteEnrollmentStatus}}{Enrollment status of the site}

\item{\code{dateCreated}}{Date when this site was created}

\item{\code{dateModified}}{Date when this site was last modified}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Site-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-toList"></a>}}
\if{latex}{\out{\hypertarget{method-Site-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Site as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of Site (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-Site-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert Site to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Site-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Site
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Site
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Site-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Site in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Site-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Site
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Site
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Site-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Site and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Site-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Site
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Site-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Site-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-print"></a>}}
\if{latex}{\out{\hypertarget{method-Site-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Site-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Site-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Site$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
