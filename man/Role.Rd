% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/role.R
\docType{class}
\name{Role}
\alias{Role}
\title{Role}
\format{
An \code{R6Class} generator object
}
\description{
Role Class

Role Class
}
\details{
Create a new Role
}
\examples{

## ------------------------------------------------
## Method `Role$toList`
## ------------------------------------------------

# convert array of Role (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{dateCreated}}{Timestamp when the role assignment was created (as [year, month, day, hour, minute, second, nanosecond]) list(integer) [optional]}

\item{\code{dateModified}}{Timestamp when the role assignment was last modified list(integer) [optional]}

\item{\code{roleId}}{Unique role ID (UUID) character [optional]}

\item{\code{communityId}}{Community ID or level associated with the role integer [optional]}

\item{\code{name}}{Name of the role character [optional]}

\item{\code{description}}{Description of the role character [optional]}

\item{\code{level}}{Role level or hierarchy integer [optional]}

\item{\code{type}}{Role type/category character [optional]}

\item{\code{inactive}}{Whether the role is inactive character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Role-new}{\code{Role$new()}}
\item \href{#method-Role-toJSON}{\code{Role$toJSON()}}
\item \href{#method-Role-toList}{\code{Role$toList()}}
\item \href{#method-Role-toSimpleType}{\code{Role$toSimpleType()}}
\item \href{#method-Role-fromJSON}{\code{Role$fromJSON()}}
\item \href{#method-Role-toJSONString}{\code{Role$toJSONString()}}
\item \href{#method-Role-fromJSONString}{\code{Role$fromJSONString()}}
\item \href{#method-Role-validateJSON}{\code{Role$validateJSON()}}
\item \href{#method-Role-toString}{\code{Role$toString()}}
\item \href{#method-Role-isValid}{\code{Role$isValid()}}
\item \href{#method-Role-getInvalidFields}{\code{Role$getInvalidFields()}}
\item \href{#method-Role-print}{\code{Role$print()}}
\item \href{#method-Role-clone}{\code{Role$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-new"></a>}}
\if{latex}{\out{\hypertarget{method-Role-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Role class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$new(
  dateCreated = NULL,
  dateModified = NULL,
  roleId = NULL,
  communityId = NULL,
  name = NULL,
  description = NULL,
  level = NULL,
  type = NULL,
  inactive = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dateCreated}}{Timestamp when the role assignment was created (as [year, month, day, hour, minute, second, nanosecond])}

\item{\code{dateModified}}{Timestamp when the role assignment was last modified}

\item{\code{roleId}}{Unique role ID (UUID)}

\item{\code{communityId}}{Community ID or level associated with the role}

\item{\code{name}}{Name of the role}

\item{\code{description}}{Description of the role}

\item{\code{level}}{Role level or hierarchy}

\item{\code{type}}{Role type/category}

\item{\code{inactive}}{Whether the role is inactive}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Role-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-toList"></a>}}
\if{latex}{\out{\hypertarget{method-Role-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Role as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of Role (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-Role-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert Role to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Role-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Role
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Role
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Role-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Role in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Role-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Role
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Role
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Role-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Role and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Role-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Role
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Role-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Role-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-print"></a>}}
\if{latex}{\out{\hypertarget{method-Role-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Role-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Role-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Role$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
