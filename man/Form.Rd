% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/form.R
\docType{class}
\name{Form}
\alias{Form}
\title{Form}
\format{
An \code{R6Class} generator object
}
\description{
Form Class

Form Class
}
\details{
Create a new Form
}
\examples{

## ------------------------------------------------
## Method `Form$toList`
## ------------------------------------------------

# convert array of Form (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{studyKey}}{Unique study key character [optional]}

\item{\code{formId}}{Mednet Form ID integer [optional]}

\item{\code{formKey}}{User-defined form key character [optional]}

\item{\code{formName}}{Name of the form (eCRF) character [optional]}

\item{\code{formType}}{Type of the form (e.g., Subject or Site) character [optional]}

\item{\code{revision}}{Number of modifications (revisions) of the form metadata integer [optional]}

\item{\code{embeddedLog}}{Whether the form has an embedded log character [optional]}

\item{\code{enforceOwnership}}{Whether the form enforces record ownership character [optional]}

\item{\code{userAgreement}}{Whether the form requires a user agreement character [optional]}

\item{\code{subjectRecordReport}}{Whether the form is marked as a subject record report character [optional]}

\item{\code{unscheduledVisit}}{Whether the form is included in unscheduled visits character [optional]}

\item{\code{otherForms}}{Whether the form is included in Other Forms category character [optional]}

\item{\code{eproForm}}{Whether the form is an ePRO (electronic patient reported outcome) form character [optional]}

\item{\code{allowCopy}}{Whether the form allows copying of data character [optional]}

\item{\code{disabled}}{Whether the form is soft-deleted (disabled) character [optional]}

\item{\code{dateCreated}}{Date when this form was created character [optional]}

\item{\code{dateModified}}{Date when this form was last modified character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Form-new}{\code{Form$new()}}
\item \href{#method-Form-toJSON}{\code{Form$toJSON()}}
\item \href{#method-Form-toList}{\code{Form$toList()}}
\item \href{#method-Form-toSimpleType}{\code{Form$toSimpleType()}}
\item \href{#method-Form-fromJSON}{\code{Form$fromJSON()}}
\item \href{#method-Form-toJSONString}{\code{Form$toJSONString()}}
\item \href{#method-Form-fromJSONString}{\code{Form$fromJSONString()}}
\item \href{#method-Form-validateJSON}{\code{Form$validateJSON()}}
\item \href{#method-Form-toString}{\code{Form$toString()}}
\item \href{#method-Form-isValid}{\code{Form$isValid()}}
\item \href{#method-Form-getInvalidFields}{\code{Form$getInvalidFields()}}
\item \href{#method-Form-print}{\code{Form$print()}}
\item \href{#method-Form-clone}{\code{Form$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-new"></a>}}
\if{latex}{\out{\hypertarget{method-Form-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Form class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$new(
  studyKey = NULL,
  formId = NULL,
  formKey = NULL,
  formName = NULL,
  formType = NULL,
  revision = NULL,
  embeddedLog = NULL,
  enforceOwnership = NULL,
  userAgreement = NULL,
  subjectRecordReport = NULL,
  unscheduledVisit = NULL,
  otherForms = NULL,
  eproForm = NULL,
  allowCopy = NULL,
  disabled = NULL,
  dateCreated = NULL,
  dateModified = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{studyKey}}{Unique study key}

\item{\code{formId}}{Mednet Form ID}

\item{\code{formKey}}{User-defined form key}

\item{\code{formName}}{Name of the form (eCRF)}

\item{\code{formType}}{Type of the form (e.g., Subject or Site)}

\item{\code{revision}}{Number of modifications (revisions) of the form metadata}

\item{\code{embeddedLog}}{Whether the form has an embedded log}

\item{\code{enforceOwnership}}{Whether the form enforces record ownership}

\item{\code{userAgreement}}{Whether the form requires a user agreement}

\item{\code{subjectRecordReport}}{Whether the form is marked as a subject record report}

\item{\code{unscheduledVisit}}{Whether the form is included in unscheduled visits}

\item{\code{otherForms}}{Whether the form is included in Other Forms category}

\item{\code{eproForm}}{Whether the form is an ePRO (electronic patient reported outcome) form}

\item{\code{allowCopy}}{Whether the form allows copying of data}

\item{\code{disabled}}{Whether the form is soft-deleted (disabled)}

\item{\code{dateCreated}}{Date when this form was created}

\item{\code{dateModified}}{Date when this form was last modified}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Form-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-toList"></a>}}
\if{latex}{\out{\hypertarget{method-Form-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Form as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of Form (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-Form-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert Form to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Form-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Form
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Form
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Form-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Form in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Form-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Form
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Form
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Form-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Form and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Form-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Form
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Form-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Form-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-print"></a>}}
\if{latex}{\out{\hypertarget{method-Form-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Form-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Form-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Form$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
