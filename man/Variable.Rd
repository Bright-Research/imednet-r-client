% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variable.R
\docType{class}
\name{Variable}
\alias{Variable}
\title{Variable}
\format{
An \code{R6Class} generator object
}
\description{
Variable Class

Variable Class
}
\details{
Create a new Variable
}
\examples{

## ------------------------------------------------
## Method `Variable$toList`
## ------------------------------------------------

# convert array of Variable (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{studyKey}}{Unique study key character [optional]}

\item{\code{variableId}}{Mednet variable ID integer [optional]}

\item{\code{variableType}}{Type of the variable (field type), e.g., RADIO, TEXT, etc. character [optional]}

\item{\code{variableName}}{Name of the variable (question text or label) character [optional]}

\item{\code{sequence}}{Sequence of the variable on the form integer [optional]}

\item{\code{revision}}{Number of modifications of the variable (via form metadata revisions) integer [optional]}

\item{\code{disabled}}{Whether the variable is marked as disabled (deleted) character [optional]}

\item{\code{dateCreated}}{Date when this variable was created character [optional]}

\item{\code{dateModified}}{Date when this variable was last modified character [optional]}

\item{\code{formId}}{ID of the form that this variable belongs to integer [optional]}

\item{\code{variableOid}}{Client-assigned variable OID character [optional]}

\item{\code{deleted}}{Whether the variable is marked as deleted character [optional]}

\item{\code{formKey}}{Form key of the form that this variable belongs to character [optional]}

\item{\code{formName}}{Name of the form that this variable belongs to character [optional]}

\item{\code{label}}{User-defined identifier (field name) for the variable character [optional]}

\item{\code{blinded}}{Whether the variable is flagged as blinded (hidden in certain contexts) character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Variable-new}{\code{Variable$new()}}
\item \href{#method-Variable-toJSON}{\code{Variable$toJSON()}}
\item \href{#method-Variable-toList}{\code{Variable$toList()}}
\item \href{#method-Variable-toSimpleType}{\code{Variable$toSimpleType()}}
\item \href{#method-Variable-fromJSON}{\code{Variable$fromJSON()}}
\item \href{#method-Variable-toJSONString}{\code{Variable$toJSONString()}}
\item \href{#method-Variable-fromJSONString}{\code{Variable$fromJSONString()}}
\item \href{#method-Variable-validateJSON}{\code{Variable$validateJSON()}}
\item \href{#method-Variable-toString}{\code{Variable$toString()}}
\item \href{#method-Variable-isValid}{\code{Variable$isValid()}}
\item \href{#method-Variable-getInvalidFields}{\code{Variable$getInvalidFields()}}
\item \href{#method-Variable-print}{\code{Variable$print()}}
\item \href{#method-Variable-clone}{\code{Variable$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-new"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Variable class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$new(
  studyKey = NULL,
  variableId = NULL,
  variableType = NULL,
  variableName = NULL,
  sequence = NULL,
  revision = NULL,
  disabled = NULL,
  dateCreated = NULL,
  dateModified = NULL,
  formId = NULL,
  variableOid = NULL,
  deleted = NULL,
  formKey = NULL,
  formName = NULL,
  label = NULL,
  blinded = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{studyKey}}{Unique study key}

\item{\code{variableId}}{Mednet variable ID}

\item{\code{variableType}}{Type of the variable (field type), e.g., RADIO, TEXT, etc.}

\item{\code{variableName}}{Name of the variable (question text or label)}

\item{\code{sequence}}{Sequence of the variable on the form}

\item{\code{revision}}{Number of modifications of the variable (via form metadata revisions)}

\item{\code{disabled}}{Whether the variable is marked as disabled (deleted)}

\item{\code{dateCreated}}{Date when this variable was created}

\item{\code{dateModified}}{Date when this variable was last modified}

\item{\code{formId}}{ID of the form that this variable belongs to}

\item{\code{variableOid}}{Client-assigned variable OID}

\item{\code{deleted}}{Whether the variable is marked as deleted}

\item{\code{formKey}}{Form key of the form that this variable belongs to}

\item{\code{formName}}{Name of the form that this variable belongs to}

\item{\code{label}}{User-defined identifier (field name) for the variable}

\item{\code{blinded}}{Whether the variable is flagged as blinded (hidden in certain contexts)}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-toList"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Variable as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of Variable (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert Variable to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Variable
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Variable
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Variable in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Variable
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Variable
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Variable and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Variable
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-print"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Variable-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Variable-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Variable$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
