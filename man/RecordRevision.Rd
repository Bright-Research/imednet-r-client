% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/record_revision.R
\docType{class}
\name{RecordRevision}
\alias{RecordRevision}
\title{RecordRevision}
\format{
An \code{R6Class} generator object
}
\description{
RecordRevision Class

RecordRevision Class
}
\details{
Create a new RecordRevision
}
\examples{

## ------------------------------------------------
## Method `RecordRevision$toList`
## ------------------------------------------------

# convert array of RecordRevision (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{studyKey}}{Unique study key character [optional]}

\item{\code{recordRevisionId}}{Unique system identifier for the record revision integer [optional]}

\item{\code{recordId}}{Unique system identifier of the related record integer [optional]}

\item{\code{recordOid}}{Client-assigned record OID (if any) character [optional]}

\item{\code{recordRevision}}{Revision number of the record (version of the record status) integer [optional]}

\item{\code{dataRevision}}{Revision number of the data within the record integer [optional]}

\item{\code{recordStatus}}{Status of the record at this revision (user-defined status label) character [optional]}

\item{\code{subjectId}}{Mednet subject ID related to the record integer [optional]}

\item{\code{subjectOid}}{Client-assigned subject OID related to the record character [optional]}

\item{\code{subjectKey}}{Subject display ID related to the record character [optional]}

\item{\code{siteId}}{Site ID related to the record integer [optional]}

\item{\code{formKey}}{Form key of the form that the record belongs to character [optional]}

\item{\code{intervalId}}{Interval ID (visit definition) related to the record integer [optional]}

\item{\code{role}}{Role name of the user who saved the record revision character [optional]}

\item{\code{user}}{Username of the user who saved the record revision character [optional]}

\item{\code{reasonForChange}}{Reason for change, if provided (for audit trail) character [optional]}

\item{\code{deleted}}{Whether the record was deleted in this revision character [optional]}

\item{\code{dateCreated}}{Date when this record revision was created character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RecordRevision-new}{\code{RecordRevision$new()}}
\item \href{#method-RecordRevision-toJSON}{\code{RecordRevision$toJSON()}}
\item \href{#method-RecordRevision-toList}{\code{RecordRevision$toList()}}
\item \href{#method-RecordRevision-toSimpleType}{\code{RecordRevision$toSimpleType()}}
\item \href{#method-RecordRevision-fromJSON}{\code{RecordRevision$fromJSON()}}
\item \href{#method-RecordRevision-toJSONString}{\code{RecordRevision$toJSONString()}}
\item \href{#method-RecordRevision-fromJSONString}{\code{RecordRevision$fromJSONString()}}
\item \href{#method-RecordRevision-validateJSON}{\code{RecordRevision$validateJSON()}}
\item \href{#method-RecordRevision-toString}{\code{RecordRevision$toString()}}
\item \href{#method-RecordRevision-isValid}{\code{RecordRevision$isValid()}}
\item \href{#method-RecordRevision-getInvalidFields}{\code{RecordRevision$getInvalidFields()}}
\item \href{#method-RecordRevision-print}{\code{RecordRevision$print()}}
\item \href{#method-RecordRevision-clone}{\code{RecordRevision$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-new"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new RecordRevision class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$new(
  studyKey = NULL,
  recordRevisionId = NULL,
  recordId = NULL,
  recordOid = NULL,
  recordRevision = NULL,
  dataRevision = NULL,
  recordStatus = NULL,
  subjectId = NULL,
  subjectOid = NULL,
  subjectKey = NULL,
  siteId = NULL,
  formKey = NULL,
  intervalId = NULL,
  role = NULL,
  user = NULL,
  reasonForChange = NULL,
  deleted = NULL,
  dateCreated = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{studyKey}}{Unique study key}

\item{\code{recordRevisionId}}{Unique system identifier for the record revision}

\item{\code{recordId}}{Unique system identifier of the related record}

\item{\code{recordOid}}{Client-assigned record OID (if any)}

\item{\code{recordRevision}}{Revision number of the record (version of the record status)}

\item{\code{dataRevision}}{Revision number of the data within the record}

\item{\code{recordStatus}}{Status of the record at this revision (user-defined status label)}

\item{\code{subjectId}}{Mednet subject ID related to the record}

\item{\code{subjectOid}}{Client-assigned subject OID related to the record}

\item{\code{subjectKey}}{Subject display ID related to the record}

\item{\code{siteId}}{Site ID related to the record}

\item{\code{formKey}}{Form key of the form that the record belongs to}

\item{\code{intervalId}}{Interval ID (visit definition) related to the record}

\item{\code{role}}{Role name of the user who saved the record revision}

\item{\code{user}}{Username of the user who saved the record revision}

\item{\code{reasonForChange}}{Reason for change, if provided (for audit trail)}

\item{\code{deleted}}{Whether the record was deleted in this revision}

\item{\code{dateCreated}}{Date when this record revision was created}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-toList"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
RecordRevision as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of RecordRevision (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert RecordRevision to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of RecordRevision
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of RecordRevision
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
RecordRevision in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of RecordRevision
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of RecordRevision
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to RecordRevision and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-toString"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of RecordRevision
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-print"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RecordRevision-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RecordRevision-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordRevision$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
