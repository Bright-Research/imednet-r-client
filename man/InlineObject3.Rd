% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inline_object3.R
\docType{class}
\name{InlineObject3}
\alias{InlineObject3}
\title{InlineObject3}
\format{
An \code{R6Class} generator object
}
\description{
InlineObject3 Class

InlineObject3 Class
}
\details{
Create a new InlineObject3
}
\examples{

## ------------------------------------------------
## Method `InlineObject3$toList`
## ------------------------------------------------

# convert array of InlineObject3 (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{metadata}}{\link{Metadata} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InlineObject3-new}{\code{InlineObject3$new()}}
\item \href{#method-InlineObject3-toJSON}{\code{InlineObject3$toJSON()}}
\item \href{#method-InlineObject3-toList}{\code{InlineObject3$toList()}}
\item \href{#method-InlineObject3-toSimpleType}{\code{InlineObject3$toSimpleType()}}
\item \href{#method-InlineObject3-fromJSON}{\code{InlineObject3$fromJSON()}}
\item \href{#method-InlineObject3-toJSONString}{\code{InlineObject3$toJSONString()}}
\item \href{#method-InlineObject3-fromJSONString}{\code{InlineObject3$fromJSONString()}}
\item \href{#method-InlineObject3-validateJSON}{\code{InlineObject3$validateJSON()}}
\item \href{#method-InlineObject3-toString}{\code{InlineObject3$toString()}}
\item \href{#method-InlineObject3-isValid}{\code{InlineObject3$isValid()}}
\item \href{#method-InlineObject3-getInvalidFields}{\code{InlineObject3$getInvalidFields()}}
\item \href{#method-InlineObject3-print}{\code{InlineObject3$print()}}
\item \href{#method-InlineObject3-clone}{\code{InlineObject3$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-new"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new InlineObject3 class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$new(metadata = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{metadata}}{metadata}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-toList"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
InlineObject3 as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of InlineObject3 (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert InlineObject3 to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of InlineObject3
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of InlineObject3
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
InlineObject3 in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of InlineObject3
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of InlineObject3
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to InlineObject3 and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-toString"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of InlineObject3
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-print"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InlineObject3-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InlineObject3-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InlineObject3$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
