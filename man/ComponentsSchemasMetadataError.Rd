% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components_schemas_metadata_error.R
\docType{class}
\name{ComponentsSchemasMetadataError}
\alias{ComponentsSchemasMetadataError}
\title{ComponentsSchemasMetadataError}
\format{
An \code{R6Class} generator object
}
\description{
Error details if an error occurred

ComponentsSchemasMetadataError Class
}
\details{
Create a new ComponentsSchemasMetadataError
}
\examples{

## ------------------------------------------------
## Method `ComponentsSchemasMetadataError$toList`
## ------------------------------------------------

# convert array of ComponentsSchemasMetadataError (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Super class}{
\code{openapi::AnyType} -> \code{ComponentsSchemasMetadataError}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{message}}{Error message describing the issue character [optional]}

\item{\code{_field_list}}{a list of fields list(character)}

\item{\code{additional_properties}}{additional properties list(character) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ComponentsSchemasMetadataError-new}{\code{ComponentsSchemasMetadataError$new()}}
\item \href{#method-ComponentsSchemasMetadataError-toJSON}{\code{ComponentsSchemasMetadataError$toJSON()}}
\item \href{#method-ComponentsSchemasMetadataError-toList}{\code{ComponentsSchemasMetadataError$toList()}}
\item \href{#method-ComponentsSchemasMetadataError-toSimpleType}{\code{ComponentsSchemasMetadataError$toSimpleType()}}
\item \href{#method-ComponentsSchemasMetadataError-fromJSON}{\code{ComponentsSchemasMetadataError$fromJSON()}}
\item \href{#method-ComponentsSchemasMetadataError-toJSONString}{\code{ComponentsSchemasMetadataError$toJSONString()}}
\item \href{#method-ComponentsSchemasMetadataError-fromJSONString}{\code{ComponentsSchemasMetadataError$fromJSONString()}}
\item \href{#method-ComponentsSchemasMetadataError-validateJSON}{\code{ComponentsSchemasMetadataError$validateJSON()}}
\item \href{#method-ComponentsSchemasMetadataError-toString}{\code{ComponentsSchemasMetadataError$toString()}}
\item \href{#method-ComponentsSchemasMetadataError-isValid}{\code{ComponentsSchemasMetadataError$isValid()}}
\item \href{#method-ComponentsSchemasMetadataError-getInvalidFields}{\code{ComponentsSchemasMetadataError$getInvalidFields()}}
\item \href{#method-ComponentsSchemasMetadataError-print}{\code{ComponentsSchemasMetadataError$print()}}
\item \href{#method-ComponentsSchemasMetadataError-clone}{\code{ComponentsSchemasMetadataError$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-new"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ComponentsSchemasMetadataError class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$new(
  message = NULL,
  additional_properties = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{message}}{Error message describing the issue}

\item{\code{additional_properties}}{additional properties (optional)}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-toList"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ComponentsSchemasMetadataError as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of ComponentsSchemasMetadataError (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert ComponentsSchemasMetadataError to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ComponentsSchemasMetadataError
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ComponentsSchemasMetadataError
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
ComponentsSchemasMetadataError in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ComponentsSchemasMetadataError
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ComponentsSchemasMetadataError
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ComponentsSchemasMetadataError and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ComponentsSchemasMetadataError
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-print"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ComponentsSchemasMetadataError-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ComponentsSchemasMetadataError-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ComponentsSchemasMetadataError$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
