% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subject.R
\docType{class}
\name{Subject}
\alias{Subject}
\title{Subject}
\format{
An \code{R6Class} generator object
}
\description{
Subject Class

Subject Class
}
\details{
Create a new Subject
}
\examples{

## ------------------------------------------------
## Method `Subject$toList`
## ------------------------------------------------

# convert array of Subject (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{studyKey}}{Unique study key character [optional]}

\item{\code{subjectId}}{Mednet subject ID (internal numeric ID) integer [optional]}

\item{\code{subjectOid}}{Client-assigned subject object identifier (OID) character [optional]}

\item{\code{subjectKey}}{Protocol-assigned subject identifier (display ID) character [optional]}

\item{\code{subjectStatus}}{Current status of the subject (e.g., Enrolled) character [optional]}

\item{\code{siteId}}{Mednet site ID the subject is associated with integer [optional]}

\item{\code{siteName}}{Name of the site the subject is associated with character [optional]}

\item{\code{deleted}}{Whether the subject is marked as deleted character [optional]}

\item{\code{enrollmentStartDate}}{Subject’s enrollment start date character [optional]}

\item{\code{dateCreated}}{Date when this subject record was created character [optional]}

\item{\code{dateModified}}{Date when this subject record was last modified character [optional]}

\item{\code{keywords}}{List of keywords associated with the subject list(\link{Keyword}) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Subject-new}{\code{Subject$new()}}
\item \href{#method-Subject-toJSON}{\code{Subject$toJSON()}}
\item \href{#method-Subject-toList}{\code{Subject$toList()}}
\item \href{#method-Subject-toSimpleType}{\code{Subject$toSimpleType()}}
\item \href{#method-Subject-fromJSON}{\code{Subject$fromJSON()}}
\item \href{#method-Subject-toJSONString}{\code{Subject$toJSONString()}}
\item \href{#method-Subject-fromJSONString}{\code{Subject$fromJSONString()}}
\item \href{#method-Subject-validateJSON}{\code{Subject$validateJSON()}}
\item \href{#method-Subject-toString}{\code{Subject$toString()}}
\item \href{#method-Subject-isValid}{\code{Subject$isValid()}}
\item \href{#method-Subject-getInvalidFields}{\code{Subject$getInvalidFields()}}
\item \href{#method-Subject-print}{\code{Subject$print()}}
\item \href{#method-Subject-clone}{\code{Subject$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-new"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Subject class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$new(
  studyKey = NULL,
  subjectId = NULL,
  subjectOid = NULL,
  subjectKey = NULL,
  subjectStatus = NULL,
  siteId = NULL,
  siteName = NULL,
  deleted = NULL,
  enrollmentStartDate = NULL,
  dateCreated = NULL,
  dateModified = NULL,
  keywords = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{studyKey}}{Unique study key}

\item{\code{subjectId}}{Mednet subject ID (internal numeric ID)}

\item{\code{subjectOid}}{Client-assigned subject object identifier (OID)}

\item{\code{subjectKey}}{Protocol-assigned subject identifier (display ID)}

\item{\code{subjectStatus}}{Current status of the subject (e.g., Enrolled)}

\item{\code{siteId}}{Mednet site ID the subject is associated with}

\item{\code{siteName}}{Name of the site the subject is associated with}

\item{\code{deleted}}{Whether the subject is marked as deleted}

\item{\code{enrollmentStartDate}}{Subject’s enrollment start date}

\item{\code{dateCreated}}{Date when this subject record was created}

\item{\code{dateModified}}{Date when this subject record was last modified}

\item{\code{keywords}}{List of keywords associated with the subject}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
Convert to an R object. This method is deprecated. Use `toSimpleType()` instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$toJSON()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-toList"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-toList}{}}}
\subsection{Method \code{toList()}}{
Convert to a List

Convert the R6 object to a list to work more easily with other tooling.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$toList()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Subject as a base R list.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# convert array of Subject (x) to a data frame
\dontrun{
library(purrr)
library(tibble)
df <- x |> map(\(y)y$toList()) |> map(as_tibble) |> list_rbind()
df
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-toSimpleType"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-toSimpleType}{}}}
\subsection{Method \code{toSimpleType()}}{
Convert Subject to a base R type
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$toSimpleType()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A base R type, e.g. a list or numeric/character array.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Subject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Subject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$toJSONString(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Parameters passed to `jsonlite::toJSON`}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Subject in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Subject
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Subject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Subject and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Subject
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-print"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-print}{}}}
\subsection{Method \code{print()}}{
Print the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Subject-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Subject-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Subject$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
